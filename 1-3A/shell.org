* shell脚本

** 变量

*** 定义变量
   shell中变量一般是以字母或者下划线开头,后面可以跟人以长度的字符,数字或下划线
   *注意:* 
          - 变量名和"="之间不能有空格.
          - 不能使用bash里的关键字(可以用help命令查看保留关键字).
   例如:使用"{}"是为了明确变量边界.
#+BEGIN_SRC    bash
#!/bin/bash
   name="p"
   echo $name
   echo ${name}
#+END_SRC

*** 只读变量
    使用readonly命令可以把变量定义为只读变量,只读的变量不能被改变
#+BEGIN_SRC 
#!/bin/bash
   name="p"
   readonly name
   name="pp"
#+END_SRC

*** 删除变量
    使用unset命令可以删除变量,变量被删除后不能再次使用,不能删除只读变量
    
*** 变量类型
    1) 局部变量
       在脚本或命令中定义,仅在当前shell中有效,其他shell启动的程序不能访问该局部变量
    2) 环境变量
       所有的程序,包括shell启动的程序,都可以访问,有效程序需要环境变量保证正常运行
       必要的时候shell脚本也可以定义环境变量.
    3) shell变量
       shell变量是由shell程序设置的特殊变量.shell变量中部分是环境变量,部分是局部变量.


*** shell特殊变量
    包含其他特殊字符的变量
例如 $表示当前shell进程的pid
#+BEGIN_SRC 
#!/bin/bash
$echo $$

#+END_SRC

特殊变量列表
| 变量 | 含义                                                       |    |
|------+------------------------------------------------------------+----|
| $0   | 当前脚本的文件名                                           |    |
|------+------------------------------------------------------------+----|
| $n   | 传递给脚本或函数的参数.n是一个数字,表示第几个参数          |    |
|------+------------------------------------------------------------+----|
| $#   | 传递给脚本或函数的参数个数                                 |    |
|------+------------------------------------------------------------+----|
| $*   | 传递给脚本或函数的所有参数                                 |  |
|------+------------------------------------------------------------+----|
| $@   | 传递给脚本或函数的所有参数.被双引号("")包含是,与$*稍有不同 |    |
|------+------------------------------------------------------------+----|
| $?   | 上个命令的退出状态,或函数的返回值                          |    |
|------+------------------------------------------------------------+----|
| $$   | 当前shell进程的pid                                         |    |
|------+------------------------------------------------------------+----|
|      |                                                            |    |

例如:
#+BEGIN_SRC 
#!/bin/bash
echo "file name: $0"
echo "first parameter: $1"
echo "first parameter: $2"
echo "queted values: $@"
echo "queted values: $*"
echo "Total number of parameters: $#"

#+END_SRC

$*和$@的区别
    当他们被双引号包含时,$*会将所有的参数作为一个整体,以"$1,$2...$n"的形式输出所有参数;
    $@则是将各个参数分开,以"$1","$2"..."$n"的形式输出所有参数.
#+BEGIN_SRC 
#!/bin/bash

#
echo "\$*=" $*
echo "\"\$*\"=" "$*"

echo "\$@=" $@
echo "\"\$@\"=" "$@"

echo "print each param from \$*"
for var in $*
do 
    echo "$var"
done

echo "print each param from \$@"
for var in $@
do
    echo "$var"
done

#"$*"
echo "print each param from \"\$*\""
for var in "$*"
do
    echo "$var"
done

#"$@"
echo "print each param from \"\$@\""
for var in "$@"
do
    echo "$var"
done


#+END_SRC